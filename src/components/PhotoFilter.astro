---
// Add type definitions
import PhotoLink from './PhotoLink.astro';

interface Props {
  categories: string[];
  activeCategory?: string;
  centered?: boolean;
  showViewAll?: boolean;
}

const { 
  categories, 
  activeCategory,
  centered = false,
  showViewAll = false
} = Astro.props;

// Function to get the URL for a category
const getCategoryUrl = (category: string) => {
  return `/photography/category/${category.toLowerCase()}`;
};

// Function to check if a category is active
const isActive = (category: string) => {
  return category === activeCategory;
};
---

<div class="photo-filter mb-8">
  <div class={`flex flex-wrap gap-3 ${centered ? 'justify-center w-full' : ''}`}>
    <a 
      href="/photography" 
      class={`px-4 py-2 rounded-full text-sm font-medium transition-colors
        ${!activeCategory 
          ? 'bg-[var(--apple-blue)] text-white' 
          : 'bg-[var(--apple-gray-100)] text-[var(--apple-gray-700)] dark:bg-[var(--apple-gray-800)] hover:bg-[var(--apple-gray-300)] dark:hover:bg-[var(--apple-gray-200)] dark:text-[var(--apple-gray-700)]'
        }`}
    >
      All Photos
    </a>
    
    {categories.map(category => (
      <a
        href={getCategoryUrl(category)}
        class={`px-4 py-2 rounded-full text-sm font-medium transition-colors
          ${isActive(category) 
            ? 'bg-[var(--apple-blue)] text-white' 
            : 'bg-[var(--apple-gray-100)] text-[var(--apple-gray-700)] dark:bg-[var(--apple-gray-800)] dark:text-[var(--apple-gray-300)] hover:bg-[var(--apple-gray-200)] dark:hover:bg-[var(--apple-gray-700)]'
          }`}
      >
        {category}
      </a>
    ))}
  </div>
  
  {showViewAll && (
    <div class="mt-6 text-center">
      <PhotoLink href="/photography" />
    </div>
  )}
</div>

<style>
  .photo-filter {
    position: relative;
    width: 100%;
  }
  
  .photo-filter::after {
    content: '';
    position: absolute;
    bottom: -16px;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(to right, transparent, var(--apple-gray-200), transparent);
    opacity: 0.6;
  }
  
  .dark .photo-filter::after {
    background: linear-gradient(to right, transparent, var(--apple-gray-700), transparent);
  }
</style>

