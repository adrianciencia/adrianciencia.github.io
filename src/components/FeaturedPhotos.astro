---
import PhotoSlideshow from './PhotoSlideshow.astro';
import { allPhotos, formatCategory } from '../data/photos';
import { getFeaturedPhotos } from '../data/photos';
import PhotoGrid from './PhotoGrid.astro';

const featuredPhotos = getFeaturedPhotos();
const gridPhotos = allPhotos.slice(3, 7); // Temporary until we create a proper selection logic
---

<section class="featured-photos py-16 md:py-24">
  ---
  // Replace existing link with PhotoLink
  import PhotoLink from './PhotoLink.astro';
  ---
  
  // Update navigation link section
  <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-10">
    <div>
      <h2 class="text-3xl font-semibold tracking-tight text-[var(--apple-gray-900)] dark:text-white mb-2">Photography</h2>
      <p class="text-lg text-[var(--apple-gray-500)] dark:text-[var(--apple-gray-300)]">Capturing the wonders of the cosmos</p>
    </div>
    
    <a href="/photography" class="mt-4 md:mt-0 text-[var(--apple-blue)] font-medium inline-flex items-center group">
      View all photos
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-1" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
      </svg>
    </a>
    </div>
    
    // Remove gridPhotos derivation and use slice directly in template
    
    // In template section:
    <div class="mb-8">
      <PhotoSlideshow photos={featuredPhotos} height="50vh" />
    </div>
    
    // In template section:
    <PhotoGrid photos={gridPhotos} columns={{ sm: 2, md: 4 }} />
    
    <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
      {gridPhotos.map((photo) => (
        <a href={`/photography/${photo.slug}`} class="group block relative overflow-hidden rounded-xl aspect-square" key={photo.src}>
          <img src={photo.src} alt={photo.alt} class="w-full h-full object-cover" />
          <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/20 to-transparent flex flex-col justify-end p-4">
            <h3 class="text-white font-medium">{photo.caption}</h3>
            <p class="text-white/80 text-sm">{formatCategory(photo.category)}</p>
          </div>
        </a>
      ))}
    </div>
  </div>
</section>

<style>
  .featured-photos {
    position: relative;
  }
  
  .featured-photos::before,
  .featured-photos::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(to right, transparent, var(--apple-gray-200), transparent);
    opacity: 0.6;
  }
  
  .featured-photos::before { top: 0 }
  .featured-photos::after { bottom: 0 }
  
  .dark .featured-photos::before,
  .dark .featured-photos::after {
    background: linear-gradient(to right, transparent, var(--apple-gray-700), transparent);
  }
</style>