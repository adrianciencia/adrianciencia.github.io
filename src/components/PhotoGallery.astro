---
interface Photo {
  src: string;
  alt: string;
  caption?: string;
  date?: string;
  location?: string;
  featured?: boolean;
  category?: string;
}

interface Props {
  photos: Photo[];
  masonry?: boolean;
}

const { photos, masonry = false } = Astro.props;

// Convert category string to slug
const categoryToSlug = (category: string) => {
  return category?.toLowerCase() || '';
};

// Convert photo caption to slug
const captionToSlug = (caption: string) => {
  return caption?.toLowerCase().replace(/[^\w\s-]/g, '').replace(/\s+/g, '-') || '';
};
---

<div class={`photo-gallery ${masonry ? 'masonry-grid' : 'grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6'}`}>
  {photos.map((photo) => {
    const photoSlug = captionToSlug(photo.caption || photo.alt);
    return (
      <div class={`photo-item ${masonry ? 'masonry-item mb-6' : ''} group`}>
        <a href={`/photography/${photoSlug}`} class="block relative overflow-hidden rounded-xl">
          <img 
            src={photo.src} 
            alt={photo.alt} 
            class="w-full h-auto object-cover transition-transform duration-700 group-hover:scale-105"
          />
          
          <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex flex-col justify-end p-6">
            {photo.caption && (
              <h3 class="text-white text-xl font-medium mb-1">{photo.caption}</h3>
            )}
            
            <div class="flex flex-wrap items-center text-white/80 text-sm gap-x-4 gap-y-2">
              {photo.date && (
                <div class="flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5 mr-1" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
                  </svg>
                  {photo.date}
                </div>
              )}
              
              {photo.location && (
                <div class="flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5 mr-1" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
                  </svg>
                  {photo.location}
                </div>
              )}
              
              {photo.category && (
                <a 
                  href={`/photography/category/${categoryToSlug(photo.category)}`}
                  class="flex items-center hover:text-white transition-colors"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5 mr-1" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd" />
                  </svg>
                  {photo.category.charAt(0).toUpperCase() + photo.category.slice(1)}
                </a>
              )}
            </div>
          </div>
          
          {photo.featured && (
            <div class="absolute top-4 right-4 bg-[var(--apple-blue)] text-white text-xs font-medium px-2 py-1 rounded-full">
              Featured
            </div>
          )}
        </a>
      </div>
    );
  })}
</div>

<style>
  /* Masonry grid layout */
  .masonry-grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 1.5rem;
  }
  
  @media (min-width: 640px) {
    .masonry-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media (min-width: 1024px) {
    .masonry-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }
  
  /* Add a subtle animation when images load */
  .photo-item img {
    opacity: 0;
    animation: fadeIn 0.5s ease-in-out forwards;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  /* Stagger the animation for each item */
  .photo-item:nth-child(1) img { animation-delay: 0.1s; }
  .photo-item:nth-child(2) img { animation-delay: 0.2s; }
  .photo-item:nth-child(3) img { animation-delay: 0.3s; }
  .photo-item:nth-child(4) img { animation-delay: 0.4s; }
  .photo-item:nth-child(5) img { animation-delay: 0.5s; }
  .photo-item:nth-child(6) img { animation-delay: 0.6s; }
  .photo-item:nth-child(7) img { animation-delay: 0.7s; }
  .photo-item:nth-child(8) img { animation-delay: 0.8s; }
  .photo-item:nth-child(9) img { animation-delay: 0.9s; }
</style>