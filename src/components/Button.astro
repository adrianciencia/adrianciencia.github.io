---
interface Props {
  label: string;
  href?: string;
  type?: 'primary' | 'secondary' | 'tertiary';
  size?: 'small' | 'medium' | 'large';
  icon?: boolean;
  iconPosition?: 'left' | 'right';
  fullWidth?: boolean;
  buttonType?: 'button' | 'submit' | 'reset';
}

const { 
  label, 
  href, 
  type = 'primary', 
  size = 'medium',
  icon = false,
  iconPosition = 'right',
  fullWidth = false,
  buttonType = 'button'
} = Astro.props;

// Determine if it's a link or button
const isLink = !!href;
const Component = isLink ? 'a' : 'button';

// Base classes
let classes = "inline-flex items-center justify-center font-medium transition-all duration-300";

// Size classes
const sizeClasses = {
  small: "text-sm px-4 py-1.5 rounded-full",
  medium: "text-base px-6 py-2 rounded-full",
  large: "text-lg px-8 py-3 rounded-full"
};

// Type classes
const typeClasses = {
  primary: "bg-[var(--apple-blue)] text-white hover:bg-[var(--apple-blue-dark)] active:scale-[0.98] shadow-sm hover:shadow",
  secondary: "bg-[var(--apple-gray-100)] text-[var(--apple-gray-900)] dark:bg-[var(--apple-gray-800)] dark:text-white hover:bg-[var(--apple-gray-200)] dark:hover:bg-[var(--apple-gray-700)] active:scale-[0.98]",
  tertiary: "bg-transparent text-[var(--apple-blue)] hover:bg-[var(--apple-gray-100)] dark:hover:bg-[var(--apple-gray-800)] active:scale-[0.98]"
};

// Full width class
const fullWidthClass = fullWidth ? "w-full" : "";

// Combine all classes
classes = `${classes} ${sizeClasses[size]} ${typeClasses[type]} ${fullWidthClass}`;

// Props for the component
const componentProps = isLink 
  ? { href, class: classes } 
  : { type: buttonType, class: classes };
---

<Component {...componentProps}>
  {icon && iconPosition === 'left' && (
    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
      <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
    </svg>
  )}
  
  {label}
  
  {icon && iconPosition === 'right' && (
    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
      <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
    </svg>
  )}
</Component>