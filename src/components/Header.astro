---
// Get the current path to highlight the active link
const { pathname } = Astro.url;

// Define all navigation items
const navItems = [
  { path: '/', label: 'Home' },
  { path: '/about', label: 'About' },
  { path: '/projects', label: 'Projects' },
  { path: '/research', label: 'Research' },
  { path: '/blog', label: 'Blog' },
];

import DarkModeToggle from './DarkModeToggle.svelte';
---

<header class="sticky top-0 z-50 bg-white dark:bg-gray-900 shadow-sm transition-colors">
  <nav class="flex flex-wrap items-center justify-between p-4 max-w-7xl mx-auto">
    <div class="font-bold text-xl dark:text-white">MySite</div>
    
    <div class="flex items-center space-x-2">
      <DarkModeToggle client:load />
      
      <!-- Mobile menu button with proper aria attributes -->
      <button 
        id="menu-toggle" 
        class="md:hidden p-2 text-gray-600 dark:text-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
        aria-expanded="false"
        aria-controls="menu"
        aria-label="Toggle navigation menu"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>
    
    <!-- Navigation links with improved mobile styling -->
    <ul 
      id="menu" 
      class="hidden md:flex md:space-x-6 w-full md:w-auto flex-col md:flex-row mt-4 md:mt-0 absolute md:static left-0 top-[100%] bg-white dark:bg-gray-900 md:bg-transparent p-4 md:p-0 shadow-md md:shadow-none w-full transition-all duration-200 z-20"
      aria-label="Main navigation"
    >
      {navItems.map(({ path, label }) => (
        <li class="mb-2 md:mb-0">
          <a 
            href={path} 
            class={`block py-2 px-3 md:p-0 hover:text-blue-500 dark:hover:text-blue-400 transition-colors ${
              pathname === path 
                ? 'text-blue-600 dark:text-blue-400 font-semibold' 
                : 'text-gray-700 dark:text-gray-300'
            }`}
            aria-current={pathname === path ? 'page' : undefined}
          >
            {label}
          </a>
        </li>
      ))}
    </ul>
  </nav>
</header>

<script>
  // Enhanced mobile menu toggle with aria attribute updates
  document.addEventListener('astro:page-load', () => {
    const menuToggle = document.getElementById('menu-toggle');
    const menu = document.getElementById('menu');
    
    if (menuToggle && menu) {
      menuToggle.addEventListener('click', () => {
        const expanded = menuToggle.getAttribute('aria-expanded') === 'true';
        menuToggle.setAttribute('aria-expanded', !expanded ? 'true' : 'false');
        menu.classList.toggle('hidden');
      });
      
      // Close menu when clicking outside
      document.addEventListener('click', (e) => {
        if (!menu.contains(e.target) && !menuToggle.contains(e.target) && !menu.classList.contains('hidden')) {
          menu.classList.add('hidden');
          menuToggle.setAttribute('aria-expanded', 'false');
        }
      });
      
      // Close menu when window is resized to desktop size
      window.addEventListener('resize', () => {
        if (window.innerWidth >= 768 && !menu.classList.contains('hidden')) {
          menu.classList.remove('hidden');
        }
      });
    }
  });
</script>
