---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Button from '../../components/common/Button.astro';
import ViewMoreLink from '../../components/photography/ViewMoreLink.astro';
import { getAllPhotos, getPhotoBySlug, getRelatedPhotos } from '../../utils/photoUtils';
import type { CollectionEntry } from 'astro:content';
import '../../styles/photography.css';

// Get static paths and data fetching logic
export async function getStaticPaths() {
  const allPhotos = await getAllPhotos();
  
  const paths = await Promise.all(allPhotos.map(async (photo) => {
    // Get related photos if any
    const relatedSlugs = photo.data.related || [];
    const relatedPhotos = await getRelatedPhotos(relatedSlugs);
    
    return {
      params: { slug: photo.id },
      props: { 
        photo,
        relatedPhotos
      }
    };
  }));
  
  return paths;
}

const { photo, relatedPhotos } = Astro.props;

// Format title properly
const pageTitle = `${photo.data.title || photo.data.caption} | Adrian Diaz Photography`;

// PhotoDetail component logic
const baseUrl = 'https://adrianciencia.github.io/photography';
const watermarkText = "Â© Adrian Diaz Espinoza";

const formatDate = (dateString: string | undefined): string => {
  if (!dateString) return '';
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
};
---

<BaseLayout title={pageTitle}>

    <!-- Main Content - Cleaner layout -->
    <article class="photo-detail bg-white dark:bg-gray-900">
      <!-- Hero image section - Enhanced with photography.css classes -->
      <div class="relative h-[65vh] min-h-[450px] overflow-hidden">
        <img
          src={photo.data.src}
          alt={photo.data.title || photo.data.caption}
          class="w-full h-full object-cover select-none"
          draggable="false"
          oncontextmenu="return false;"
          loading="eager"
          fetchpriority="high"
        />
        <!-- Simplified gradient -->
        <div class="absolute inset-x-0 bottom-0 h-1/4 bg-gradient-to-t from-black/60 to-transparent"></div>
        
        <!-- Using watermark class from photography.css -->
        <div class="watermark">
          <div class="watermark-text backdrop-blur-[1px]">
            {watermarkText}
          </div>
        </div>
        
        <!-- Cleaner title area -->
        <div class="absolute bottom-0 left-0 right-0 p-6 z-10">
          <div class="max-w-5xl mx-auto">
            <h1 class="text-2xl md:text-3xl font-bold text-white mb-2">
              {photo.data.title || photo.data.caption}
            </h1>
            {photo.data.category && (
              <span
                class="inline-block bg-black/20 text-white px-3 py-1 rounded-full text-sm backdrop-blur-sm"
              >
                {photo.data.category}
              </span>
            )}
          </div>
        </div>
      </div>

      <!-- Photo details section - Enhanced with new classes -->
      <div class="max-w-5xl mx-auto px-6 py-12">
        <!-- Content container with updated grid system -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-10">
          <!-- Left column: Main content -->
          <div class="lg:col-span-2">
            <!-- Photo info with enhanced styling -->
            {photo.data.description && (
              <div class="content-section mb-10 description-box p-6">
                <h2 class="text-lg font-medium mb-3 text-gray-900 dark:text-white">About this photo</h2>
                <p class="text-gray-700 dark:text-gray-300">{photo.data.description}</p>
              </div>
            )}
            
            <!-- Related photos with enhanced styling -->
            {relatedPhotos.length > 0 && (
              <div class="content-section mt-10">
                <h2 class="text-xl font-medium mb-5 text-gray-900 dark:text-white">
                  Related Photos
                </h2>
                <div class="grid grid-cols-1 sm:grid-cols-2 gap-5">
                  {relatedPhotos.map((relatedPhoto) => (
                    <a href={`/photography/${relatedPhoto.id}`} class="group">
                      <div class="related-photo aspect-[4/3] bg-gray-100 dark:bg-gray-800 overflow-hidden">
                        <img
                          src={relatedPhoto.data.src}
                          alt={relatedPhoto.data.alt || relatedPhoto.data.caption}
                          class="w-full h-full object-cover transition-all duration-300 group-hover:scale-[1.03]"
                          loading="lazy"
                        />
                      </div>
                      <h3 class="mt-2 font-medium text-gray-900 dark:text-white group-hover:text-blue-500 transition-colors">
                        {relatedPhoto.data.caption}
                      </h3>
                    </a>
                  ))}
                </div>
              </div>
            )}
          </div>
          
          <!-- Right column: Sidebar with metadata -->
          <div class="lg:col-span-1">
            <div class="sticky top-8">
              <div class="content-section sidebar p-5">
                <!-- Metadata - Cleaner layout -->
                <h3 class="font-medium mb-3 text-gray-900 dark:text-gray-100 text-sm uppercase tracking-wide">
                  Details
                </h3>
                <ul class="space-y-2 mb-6">
                  {photo.data.date && (
                    <li class="flex justify-between text-sm">
                      <span class="text-gray-500 dark:text-gray-400">Date</span>
                      <span class="text-gray-900 dark:text-white">{formatDate(photo.data.date)}</span>
                    </li>
                  )}
                  {photo.data.location && (
                    <li class="flex justify-between text-sm">
                      <span class="text-gray-500 dark:text-gray-400">Location</span>
                      <span class="text-gray-900 dark:text-white">{photo.data.location}</span>
                    </li>
                  )}
                  {photo.data.equipment && (
                    <li class="flex justify-between text-sm">
                      <span class="text-gray-500 dark:text-gray-400">Equipment</span>
                      <span class="text-gray-900 dark:text-white">{photo.data.equipment}</span>
                    </li>
                  )}
                </ul>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Back to gallery button - Moved outside columns and centered -->
        <div class="mt-16 flex justify-center">
          <Button
            label="Back to gallery"
            href="/photography"
            type="primary"
            icon={true}
            iconPosition="left"
          />
        </div>
      </div>
    </article>
  </div>
</BaseLayout>